{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_BY_DEFAULT","SORT_FIELD_BY_ALPHABET","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","reverseStatus","setReverseStatus","visibleGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepearedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,UACxBC,EAAyB,WACzBC,EAAuB,SA2BtB,IAAMC,EAAM,WACjB,MAAkCC,mBAASJ,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EA7BR,SAA2BC,EAA3B,GAAiE,IAA7BL,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,cACvCI,EAAc,YAAOD,GAE3B,OAAQL,GACN,KAAKJ,EACHU,EAAeC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAE1D,MAEF,KAAKZ,EACHS,EAAeC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAME,UAYhE,OAJIT,GACFI,EAAeM,UAGVN,EAQHO,CAAkBnB,EAAiB,CAAEM,YAAWE,kBAEpD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAcJ,GAA0B,YACrEoB,QAAS,kBAAMf,EAAaL,IAH9B,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBd,IAAcH,GAAwB,YACtEmB,QAAS,kBAAMf,EAAaJ,IAH9B,4BAQA,wBACEkB,KAAK,SACLD,UAAS,6BAAyC,IAAlBZ,GAA2B,YAC3Dc,QAAS,WAELb,GADoB,IAAlBD,IAJR,sBAcEF,IAAcL,IAA2C,IAAlBO,IACvC,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,EAAaN,GACbQ,GAAiB,IALrB,sBAcJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aCnGtDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15ece81b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_BY_DEFAULT = 'default';\nconst SORT_FIELD_BY_ALPHABET = 'alphabet';\nconst SORT_FIELD_BY_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, { sortField, reverseStatus }) {\n  const prepearedGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_FIELD_BY_ALPHABET:\n      prepearedGoods.sort((good1, good2) => good1.localeCompare(good2));\n\n      break;\n\n    case SORT_FIELD_BY_LENGTH:\n      prepearedGoods.sort((good1, good2) => (good1.length - good2.length));\n\n      break;\n\n    default:\n      break;\n  }\n\n  if (reverseStatus) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_FIELD_BY_DEFAULT);\n  const [reverseStatus, setReverseStatus] = useState(false);\n\n  const visibleGoods\n    = getPrepearedGoods(goodsFromServer, { sortField, reverseStatus });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField !== SORT_FIELD_BY_ALPHABET && 'is-light'}`}\n          onClick={() => setSortField(SORT_FIELD_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField !== SORT_FIELD_BY_LENGTH && 'is-light'}`}\n          onClick={() => setSortField(SORT_FIELD_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reverseStatus === false && 'is-light'}`}\n          onClick={() => {\n            if (reverseStatus === false) {\n              setReverseStatus(true);\n            } else {\n              setReverseStatus(false);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SORT_FIELD_BY_DEFAULT || reverseStatus === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SORT_FIELD_BY_DEFAULT);\n              setReverseStatus(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => <li data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}